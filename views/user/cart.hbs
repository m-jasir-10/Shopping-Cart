<section>
    <div class="container mb-5">
        <div class="row mt-5 mb-5">
            {{#if products}}
            <h1 class="text-center mb-5">Cart ( {{cartCount}} )</h1>
            <div class="col-md-12 bg-light p-5">
                <div class="table-responsive">
                    <table class="table table-bordered text-center table-hover">
                        <thead>
                            <tr>
                                <th scope="col">No</th>
                                <th scope="col">Item</th>
                                <th scope="col">Name</th>
                                <th scope="col">Price</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {{#each products}}
                            <tr>
                                <th scope=" row">{{ increment @index}}</th>

                                <td>
                                    <img src="{{this.product.image}}" alt="" style="max-width: 75px; height:auto;"
                                        class="img-fluid">
                                </td>

                                <td>{{this.product.name}}</td>
                                <td>₹ {{this.product.price}}</td>

                                <td>
                                    <div class="d-flex justify-content-center align-items-center">
                                        <button class="btn btn-secondary me-3"
                                            onclick="changeQuantity('{{this._id}}', '{{this.product._id}}', '{{../user._id}}', -1)">-</button>
                                        <span id="{{this.product._id}}"> {{this.quantity}} </span>
                                        <button class="btn btn-secondary ms-3"
                                            onclick="changeQuantity('{{this._id}}', '{{this.product._id}}', '{{../user._id}}', 1)">+</button>
                                    </div>
                                </td>
                                <td>
                                    <button class="btn btn-danger"
                                        onclick="removeProductFromCart('{{this._id}}', '{{this.product._id}}', '{{../user._id}}')">Remove</button>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="row mb-5 mt-5 justify-content-end">
            <div class="col-md-12 bg-light p-5" style="max-width: 400px;">
                <h4 class="mb-4 text-center">Total Amount : ₹ <span id="total-price"> {{totalPrice}}</span></h4>
                <hr>
                <a href="/place-order" class="btn btn-success mt-2 w-100" style="width:100%;">Place Order</a>
            </div>
        </div>
    </div>

    {{else}}
    <div class="col-md-12 mt-5">
        <div data-aos="fade-down" class="card text-center p-4" style="width: auto;">
            <h1 class="text-danger text-center mb-3 mt-4"><strong>Cart is empty now...</strong></h1>
            <p class="text-danger text-center fs-5">Add products to the cart</p>
            <div class="text-center mb-5 mt-2">
                <a href="/" class=" btn btn-primary"><strong>Add products</strong></a>
            </div>
        </div>
    </div>
    {{/if}}
    </div>
</section>

<style>
    .table th,
    .table td {
        vertical-align: middle;
    }
</style>

<script>
    function showResponse(message) {
        Swal.fire({
            title: 'Success',
            text: message,
            icon: 'success',
            timer: 2000,
            showConfirmButton: true
        });
    }

    function changeQuantity(cartId, productId, userId, count) {
        let quantity = parseInt(document.getElementById(productId).innerHTML);
        count = parseInt(count);
        let newQuantity = quantity + count;

        if (newQuantity === 0) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to delete this product from the cart. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    proceedChangeQuantity(cartId, productId, userId, count);
                }
            });
        } else {
            proceedChangeQuantity(cartId, productId, userId, count);
        }
    }

    function proceedChangeQuantity(cartId, productId, userId, count) {
        let quantity = parseInt(document.getElementById(productId).innerHTML);
        count = parseInt(count);
        $.ajax({
            url: '/change-product-quantity/',
            method: 'post',
            data: {
                cart: cartId,
                user: userId,
                product: productId,
                count: count,
                quantity: quantity
            },
            success: (response) => {
                if (response.removeProduct) {
                    showResponse("Product removed from cart");
                    document.getElementById(productId).closest('tr').remove();
                    updateIndexNumbers();
                } else {
                    document.getElementById(productId).innerHTML = quantity + count;
                }
                updateCartSummary(response);
            }
        });
    }

    function removeProductFromCart(cartId, productId, userId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'You are about to delete this product from the cart. This action cannot be undone.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/remove-product-from-cart',
                    method: 'post',
                    data: {
                        cart: cartId,
                        product: productId,
                        user: userId
                    },
                    success: (response) => {
                        if (response.removeProduct) {
                            showResponse("Product removed from cart");
                            document.getElementById(productId).closest('tr').remove();
                            updateCartSummary(response);
                            updateIndexNumbers();
                        }
                    }
                });
            }
        });
    }

    function updateCartSummary(response) {
        if (response.cartCount !== undefined && response.totalPrice !== undefined) {
            document.getElementById('total-price').innerHTML = response.totalPrice;
            document.getElementById('cart-count').innerHTML = response.cartCount;

            if (response.cartCount === 0) {
                $('tbody').html('<tr><td colspan="6" class="text-center text-danger"><strong>Cart is empty now...</strong></td></tr>');
                $('.justify-content-end').remove();
            }
        }
    }

    function updateIndexNumbers() {
        $('tbody tr').each(function (index) {
            $(this).find('th').text(index + 1);
        });
    }
</script>